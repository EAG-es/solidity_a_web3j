package innui.web3j.generated.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Int256;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.9.8.
 */
@SuppressWarnings("rawtypes")
public class Hola_mundos extends Contract {
    public static final String BINARY = "60806040526001805460ff1916811790553480156200001d57600080fd5b506040805160808101825260606020808301828152600084860152828401929092523383528351808501855260048152631c9bdbdd60e21b918101919091529052905169726f6f745f636c61766560b01b8152600290600a01602060405180830381855afa15801562000094573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190620000b991906200023f565b6040828101919091528051600180825281830190925290602080830190803683375050506060820181905280516d7065726d69736f5f6d6178696d6f60901b91906000906200010c576200010c6200026f565b60209081029190910181019190915260008054600181018255908052825160049091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563810180546001600160a01b039093166001600160a01b03199093169290921782559183015183927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5640190620001a6908262000314565b506040820151600282015560608201518051620001ce916003840191602090910190620001d8565b50505050620003e0565b82805482825590600052602060002090810192821562000216579160200282015b8281111562000216578251825591602001919060010190620001f9565b506200022492915062000228565b5090565b5b8082111562000224576000815560010162000229565b6000602082840312156200025257600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200029a57607f821691505b602082108103620002bb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200030f57600081815260208120601f850160051c81016020861015620002ea5750805b601f850160051c820191505b818110156200030b57828155600101620002f6565b5050505b505050565b81516001600160401b0381111562000330576200033062000259565b620003488162000341845462000285565b84620002c1565b602080601f831160018114620003805760008415620003675750858301515b600019600386901b1c1916600185901b1785556200030b565b600085815260208120601f198616915b82811015620003b15788860151825594840194600190910190840162000390565b5085821015620003d05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611d8e80620003f06000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063b38f9adf116100a2578063d3a41ac511610071578063d3a41ac51461022e578063e3dbc94414610241578063e958108314610254578063f653ea1314610274578063f9d06c4d1461028757600080fd5b8063b38f9adf146101f6578063b776a7a21461020b578063c49c3d0514610213578063cdc879351461021b57600080fd5b8063688e3467116100e9578063688e34671461018157806379ad29d71461019b5780637b318b6e146101ae5780638e3ee7ba146101c15780638fecb750146101e357600080fd5b80630beef3241461011b5780631d032d01146101305780632dd47cac146101565780634dc464371461015e575b600080fd5b61012e610129366004611576565b61029a565b005b61014361013e36600461160f565b6104d6565b6040519081526020015b60405180910390f35b61012e61054f565b61017161016c36600461160f565b61058c565b604051901515815260200161014d565b60015461018e9060ff1681565b60405161014d9190611647565b6101716101a936600461166f565b6105f4565b61012e6101bc366004611699565b6106b1565b6101d46101cf36600461171e565b6108d0565b60405161014d93929190611787565b6101716101f13660046117bb565b610998565b6101fe6109fb565b60405161014d9190611809565b61012e610a88565b61012e610abf565b61012e6102293660046117bb565b610af8565b61017161023c3660046117bb565b610d68565b61012e61024f36600461181c565b610daf565b61026761026236600461171e565b610f17565b60405161014d9190611890565b6101716102823660046118d4565b61105b565b61012e61029536600461160f565b611109565b336102a48161058c565b6102c95760405162461bcd60e51b81526004016102c090611918565b60405180910390fd5b6000805b60005481101561032957600081815481106102ea576102ea61195f565b60009182526020909120600490910201546001600160a01b03908116908816036103175760019150610329565b61032281600161198b565b90506102cd565b81156103955760405162461bcd60e51b815260206004820152603560248201527f4573612064697265636369c3b36e2064652061646d696e6973747261646f722060448201527403cb09032b9ba61d0903932b3b4b9ba3930b230971605d1b60648201526084016102c0565b604080516080810182526000818301526060808201526001600160a01b03891681526020810188905290516002906103ce90889061199e565b602060405180830381855afa1580156103eb573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061040e91906119ba565b6040820152606081018590526000805460018101825590805281517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563600490920291820180546001600160a01b0319166001600160a01b03909216919091178155602083015183927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56401906104a39082611a58565b5060408201516002820155606082015180516104c991600384019160209091019061131e565b5050505050505050505050565b600080805b60005481101561053757600081815481106104f8576104f861195f565b60009182526020909120600490910201546001600160a01b03908116908516036105255760019150610537565b61053081600161198b565b90506104db565b8115610544579392505050565b506000199392505050565b336105598161058c565b6105755760405162461bcd60e51b81526004016102c090611918565b600180546000919060ff191681835b021790555050565b600080805b6000548110156105ed57600081815481106105ae576105ae61195f565b60009182526020909120600490910201546001600160a01b03908116908516036105db57600191506105ed565b6105e681600161198b565b9050610591565b5092915050565b60008080610601856104d6565b90506000808083126106a4575081905060005b600082815481106106275761062761195f565b9060005260206000209060040201600301805490508110156106a45785600083815481106106575761065761195f565b906000526020600020906004020160030182815481106106795761067961195f565b90600052602060002001540361069257600193506106a4565b61069d81600161198b565b9050610614565b5091925050505b92915050565b60405163fc09a9e560e01b81526d7065726d69736f5f6d6178696d6f60901b6004820181905290339060609073__$7ec7f4c52dcf223f6588a2b806fc4fdb5b$__9063fc09a9e590602401600060405180830381865af4158015610719573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107419190810190611b18565b905061074d82846105f4565b8160405160200161075e9190611b8f565b6040516020818303038152906040529061078b5760405162461bcd60e51b81526004016102c09190611809565b506000610797886104d6565b905060008112156107ba5760405162461bcd60e51b81526004016102c090611c0c565b8651156107f45786600082815481106107d5576107d561195f565b906000526020600020906004020160010190816107f29190611a58565b505b8551156108745760028660405161080b919061199e565b602060405180830381855afa158015610828573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061084b91906119ba565b6000828154811061085e5761085e61195f565b9060005260206000209060040201600201819055505b6001600160a01b038516156108c65784600082815481106108975761089761195f565b6000918252602090912060049091020180546001600160a01b0319166001600160a01b03929092169190911790555b5050505050505050565b600081815481106108e057600080fd5b6000918252602090912060049091020180546001820180546001600160a01b0390921693509061090f906119d3565b80601f016020809104026020016040519081016040528092919081815260200182805461093b906119d3565b80156109885780601f1061095d57610100808354040283529160200191610988565b820191906000526020600020905b81548152906001019060200180831161096b57829003601f168201915b5050505050908060020154905083565b8051600090600190825b818110156109f1576109cd868683815181106109c0576109c061195f565b60200260200101516105f4565b15156000036109df57600092506109f1565b6109ea81600161198b565b90506109a2565b5090949350505050565b6060600060015460ff166002811115610a1657610a16611631565b14610a635760405162461bcd60e51b815260206004820152601c60248201527f456c20636f6e747261746f206e6f20657374c3a12061637469766f2e0000000060448201526064016102c0565b5060408051808201909152600a815269486f6c61206d756e646f60b01b602082015290565b33610a928161058c565b610aae5760405162461bcd60e51b81526004016102c090611918565b60018054819060ff19168180610584565b33610ac98161058c565b610ae55760405162461bcd60e51b81526004016102c090611918565b600180546002919060ff19168183610584565b33610b028161058c565b610b1e5760405162461bcd60e51b81526004016102c090611918565b6000610b29846104d6565b90506000811215610b4c5760405162461bcd60e51b81526004016102c090611c0c565b6000805b8451821015610c34576d7065726d69736f5f6d6178696d6f60901b858381518110610b7d57610b7d61195f565b602002602001015103610c22576000610ba7336d7065726d69736f5f6d6178696d6f60901b6105f4565b905080610c1c5760405162461bcd60e51b815260206004820152603e60248201527f4e6f20707565646520706f6e6572207065726d69736f5f6d6178696d6f3b207360448201527f6920717569656e206c6f20706964652c206e6f206c6f20706f7365652e20000060648201526084016102c0565b50610c34565b610c2d82600161198b565b9150610b50565b610c4f866d7065726d69736f5f6d6178696d6f60901b6105f4565b15610d1c57610c6f336d7065726d69736f5f6d6178696d6f60901b6105f4565b15610c7c57506001610d20565b60405162461bcd60e51b815260206004820152606360248201527f536f6c6f20756e2061646d696e6973747261646f7220636f6e207065726d697360448201527f6f5f6d6178696d6f20707565646520646172207065726d69736f73206120756e60648201527f2061646d696e6973747261646f7220636f6e207065726d69736f5f6d6178696d60848201526203797160ed1b60a482015260c4016102c0565b5060015b8015610d60578460008481548110610d3a57610d3a61195f565b90600052602060002090600402016003019080519060200190610d5e92919061131e565b505b505050505050565b80516000908190815b818110156109f157610d8f868683815181106109c0576109c061195f565b15610d9d57600192506109f1565b610da881600161198b565b9050610d71565b33610db98161058c565b610dd55760405162461bcd60e51b81526004016102c090611918565b336000610de1826104d6565b90506000811215610e045760405162461bcd60e51b81526004016102c090611c0c565b855115610e3e578560008281548110610e1f57610e1f61195f565b90600052602060002090600402016001019081610e3c9190611a58565b505b845115610ebe57600285604051610e55919061199e565b602060405180830381855afa158015610e72573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610e9591906119ba565b60008281548110610ea857610ea861195f565b9060005260206000209060040201600201819055505b6001600160a01b03841615610d60578360008281548110610ee157610ee161195f565b6000918252602090912060049091020180546001600160a01b0319166001600160a01b0392909216919091179055505050505050565b60606000821215610f765760405162461bcd60e51b8152602060048201526024808201527f4c6120706f73696369c3b36e206e6f20707565646520736572206e656761746960448201526303b3097160e51b60648201526084016102c0565b60005480808412610fdf5760405162461bcd60e51b815260206004820152602d60248201527f4c6120706f73696369c3b36e20737570657261206c6f7320656c656d656e746f60448201526c039903232b61030b93930bc971609d1b60648201526084016102c0565b60008481548110610ff257610ff261195f565b906000526020600020906004020160030180548060200260200160405190810160405280929190818152602001828054801561104d57602002820191906000526020600020905b815481526020019060010190808311611039575b505050505092505050919050565b600080611067846104d6565b9050600081121561108a5760405162461bcd60e51b81526004016102c090611c0c565b60028360405161109a919061199e565b602060405180830381855afa1580156110b7573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906110da91906119ba565b600082815481106110ed576110ed61195f565b9060005260206000209060040201600201541491505092915050565b60405163fc09a9e560e01b81526d7065726d69736f5f6d6178696d6f60901b6004820181905290339060609073__$7ec7f4c52dcf223f6588a2b806fc4fdb5b$__9063fc09a9e590602401600060405180830381865af4158015611171573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111999190810190611b18565b90506111a582846105f4565b816040516020016111b69190611b8f565b604051602081830303815290604052906111e35760405162461bcd60e51b81526004016102c09190611809565b5060006111ef856104d6565b905060008112156112125760405162461bcd60e51b81526004016102c090611c0c565b6000805461122290600190611c54565b815481106112325761123261195f565b9060005260206000209060040201600082815481106112535761125361195f565b60009182526020909120825460049092020180546001600160a01b0319166001600160a01b0390921691909117815560018082019061129490840182611c67565b506002820154816002015560038201816003019080546112b5929190611369565b5090505060008054806112ca576112ca611d42565b60008281526020812060046000199093019283020180546001600160a01b0319168155906112fb60018301826113a9565b600282016000905560038201600061131391906113e6565b505090555050505050565b828054828255906000526020600020908101928215611359579160200282015b8281111561135957825182559160200191906001019061133e565b50611365929150611400565b5090565b8280548282559060005260206000209081019282156113595760005260206000209182015b8281111561135957825482559160010191906001019061138e565b5080546113b5906119d3565b6000825580601f106113c5575050565b601f0160209004906000526020600020908101906113e39190611400565b50565b50805460008255906000526020600020908101906113e391905b5b808211156113655760008155600101611401565b80356001600160a01b038116811461142c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561147057611470611431565b604052919050565b600067ffffffffffffffff82111561149257611492611431565b50601f01601f191660200190565b600082601f8301126114b157600080fd5b81356114c46114bf82611478565b611447565b8181528460208386010111156114d957600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261150757600080fd5b8135602067ffffffffffffffff82111561152357611523611431565b8160051b611532828201611447565b928352848101820192828101908785111561154c57600080fd5b83870192505b8483101561156b57823582529183019190830190611552565b979650505050505050565b6000806000806080858703121561158c57600080fd5b61159585611415565b9350602085013567ffffffffffffffff808211156115b257600080fd5b6115be888389016114a0565b945060408701359150808211156115d457600080fd5b6115e0888389016114a0565b935060608701359150808211156115f657600080fd5b50611603878288016114f6565b91505092959194509250565b60006020828403121561162157600080fd5b61162a82611415565b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061166957634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561168257600080fd5b61168b83611415565b946020939093013593505050565b600080600080608085870312156116af57600080fd5b6116b885611415565b9350602085013567ffffffffffffffff808211156116d557600080fd5b6116e1888389016114a0565b945060408701359150808211156116f757600080fd5b50611704878288016114a0565b92505061171360608601611415565b905092959194509250565b60006020828403121561173057600080fd5b5035919050565b60005b8381101561175257818101518382015260200161173a565b50506000910152565b60008151808452611773816020860160208601611737565b601f01601f19169290920160200192915050565b6001600160a01b03841681526060602082018190526000906117ab9083018561175b565b9050826040830152949350505050565b600080604083850312156117ce57600080fd5b6117d783611415565b9150602083013567ffffffffffffffff8111156117f357600080fd5b6117ff858286016114f6565b9150509250929050565b60208152600061162a602083018461175b565b60008060006060848603121561183157600080fd5b833567ffffffffffffffff8082111561184957600080fd5b611855878388016114a0565b9450602086013591508082111561186b57600080fd5b50611878868287016114a0565b92505061188760408501611415565b90509250925092565b6020808252825182820181905260009190848201906040850190845b818110156118c8578351835292840192918401916001016118ac565b50909695505050505050565b600080604083850312156118e757600080fd5b6118f083611415565b9150602083013567ffffffffffffffff81111561190c57600080fd5b6117ff858286016114a0565b60208082526027908201527f4c6120646972656363696f6e206e6f20657320646520756e2061646d696e69736040820152663a3930b237b91760c91b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156106ab576106ab611975565b600082516119b0818460208701611737565b9190910192915050565b6000602082840312156119cc57600080fd5b5051919050565b600181811c908216806119e757607f821691505b602082108103611a0757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115611a5357600081815260208120601f850160051c81016020861015611a345750805b601f850160051c820191505b81811015610d6057828155600101611a40565b505050565b815167ffffffffffffffff811115611a7257611a72611431565b611a8681611a8084546119d3565b84611a0d565b602080601f831160018114611abb5760008415611aa35750858301515b600019600386901b1c1916600185901b178555610d60565b600085815260208120601f198616915b82811015611aea57888601518255948401946001909101908401611acb565b5085821015611b085787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215611b2a57600080fd5b815167ffffffffffffffff811115611b4157600080fd5b8201601f81018413611b5257600080fd5b8051611b606114bf82611478565b818152856020838501011115611b7557600080fd5b611b86826020830160208601611737565b95945050505050565b7f4c6120646972656363696f6e206e6f20657320646520756e2061646d696e697381527f747261646f72206f206e6f207469656e6520656c207065726d69736f20736f6c602082015268034b1b4ba30b2379d160bd1b604082015260008251611bff816049850160208701611737565b9190910160490192915050565b60208082526028908201527f4c6120646972656363696f6e206e6f20657320646520756e2061646d696e697360408201526703a3930b237b917160c51b606082015260800190565b818103818111156106ab576106ab611975565b818103611c72575050565b611c7c82546119d3565b67ffffffffffffffff811115611c9457611c94611431565b611ca281611a8084546119d3565b6000601f821160018114611cd65760008315611cbe5750848201545b600019600385901b1c1916600184901b178455611d3b565b600085815260209020601f19841690600086815260209020845b83811015611d105782860154825560019586019590910190602001611cf0565b5085831015611d2e5781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b634e487b7160e01b600052603160045260246000fdfea264697066735822122054b9ffca5f28c1492c3801abf1f7272c1d2e6b4e8c535971a9e932cb5ec52e7064736f6c63430008110033";

    public static final String FUNC_ACL_ARRAY = "acl_array";

    public static final String FUNC_ACTIVAR = "activar";

    public static final String FUNC_ACTUALIZAR_ADMINISTRADOR_PERMISOS_ARRAY = "actualizar_administrador_permisos_array";

    public static final String FUNC_actualizar_administrador_usuario_clave_direccion = "actualizar_administrador_usuario_clave_direccion";

    public static final String FUNC_BORRAR_ADMINISTRADOR = "borrar_administrador";

    public static final String FUNC_COMPROBAR_CLAVE = "comprobar_clave";

    public static final String FUNC_CREAR_ADMINISTRADOR = "crear_administrador";

    public static final String FUNC_ESTADO = "estado";

    public static final String FUNC_INACTIVAR = "inactivar";

    public static final String FUNC_LEER = "leer";

    public static final String FUNC_LEER_ADMINISTRADOR_PERMISOS_ARRAY = "leer_administrador_permisos_array";

    public static final String FUNC_LEER_ADMINISTRADOR_POS = "leer_administrador_pos";

    public static final String FUNC_LIMITAR = "limitar";

    public static final String FUNC_SER_ADMINISTRADOR = "ser_administrador";

    public static final String FUNC_SER_ADMINISTRADOR_CON_ALGUN_PERMISO = "ser_administrador_con_algun_permiso";

    public static final String FUNC_SER_ADMINISTRADOR_CON_PERMISO = "ser_administrador_con_permiso";

    public static final String FUNC_SER_ADMINISTRADOR_CON_TODO_PERMISO = "ser_administrador_con_todo_permiso";

    @Deprecated
    protected Hola_mundos(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Hola_mundos(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Hola_mundos(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Hola_mundos(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<Tuple3<String, String, byte[]>> acl_array(BigInteger param0) {
        final Function function = new Function(FUNC_ACL_ARRAY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Bytes32>() {}));
        return new RemoteFunctionCall<Tuple3<String, String, byte[]>>(function,
                new Callable<Tuple3<String, String, byte[]>>() {
                    @Override
                    public Tuple3<String, String, byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<String, String, byte[]>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (byte[]) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> activar() {
        final Function function = new Function(
                FUNC_ACTIVAR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> actualizar_administrador_permisos_array(String direccion, List<byte[]> permisos_array) {
        final Function function = new Function(
                FUNC_ACTUALIZAR_ADMINISTRADOR_PERMISOS_ARRAY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Bytes32>(
                        org.web3j.abi.datatypes.generated.Bytes32.class,
                        org.web3j.abi.Utils.typeMap(permisos_array, org.web3j.abi.datatypes.generated.Bytes32.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> actualizar_administrador_usuario_clave_direccion(String direccion, String usuario, byte[] clave, String nueva_direccion) {
        final Function function = new Function(
                FUNC_actualizar_administrador_usuario_clave_direccion, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.Utf8String(usuario), 
                new org.web3j.abi.datatypes.DynamicBytes(clave), 
                new org.web3j.abi.datatypes.Address(160, nueva_direccion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> actualizar_administrador_usuario_clave_direccion(String usuario, byte[] clave, String nueva_direccion) {
        final Function function = new Function(
                FUNC_actualizar_administrador_usuario_clave_direccion, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(usuario), 
                new org.web3j.abi.datatypes.DynamicBytes(clave), 
                new org.web3j.abi.datatypes.Address(160, nueva_direccion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> borrar_administrador(String direccion) {
        final Function function = new Function(
                FUNC_BORRAR_ADMINISTRADOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> comprobar_clave(String direccion, byte[] clave) {
        final Function function = new Function(FUNC_COMPROBAR_CLAVE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.DynamicBytes(clave)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> crear_administrador(String direccion, String usuario, byte[] clave, List<byte[]> permisos_array) {
        final Function function = new Function(
                FUNC_CREAR_ADMINISTRADOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.Utf8String(usuario), 
                new org.web3j.abi.datatypes.DynamicBytes(clave), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Bytes32>(
                        org.web3j.abi.datatypes.generated.Bytes32.class,
                        org.web3j.abi.Utils.typeMap(permisos_array, org.web3j.abi.datatypes.generated.Bytes32.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> estado() {
        final Function function = new Function(FUNC_ESTADO, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> inactivar() {
        final Function function = new Function(
                FUNC_INACTIVAR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> leer() {
        final Function function = new Function(FUNC_LEER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<List> leer_administrador_permisos_array(BigInteger pos) {
        final Function function = new Function(FUNC_LEER_ADMINISTRADOR_PERMISOS_ARRAY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Int256(pos)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes32>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<BigInteger> leer_administrador_pos(String direccion) {
        final Function function = new Function(FUNC_LEER_ADMINISTRADOR_POS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> limitar() {
        final Function function = new Function(
                FUNC_LIMITAR, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> ser_administrador(String direccion) {
        final Function function = new Function(FUNC_SER_ADMINISTRADOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> ser_administrador_con_algun_permiso(String direccion, List<byte[]> permisos_posibles_array) {
        final Function function = new Function(FUNC_SER_ADMINISTRADOR_CON_ALGUN_PERMISO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Bytes32>(
                        org.web3j.abi.datatypes.generated.Bytes32.class,
                        org.web3j.abi.Utils.typeMap(permisos_posibles_array, org.web3j.abi.datatypes.generated.Bytes32.class))), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> ser_administrador_con_permiso(String direccion, byte[] permiso_necesario) {
        final Function function = new Function(FUNC_SER_ADMINISTRADOR_CON_PERMISO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.generated.Bytes32(permiso_necesario)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> ser_administrador_con_todo_permiso(String direccion, List<byte[]> permisos_exigidos_array) {
        final Function function = new Function(FUNC_SER_ADMINISTRADOR_CON_TODO_PERMISO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, direccion), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Bytes32>(
                        org.web3j.abi.datatypes.generated.Bytes32.class,
                        org.web3j.abi.Utils.typeMap(permisos_exigidos_array, org.web3j.abi.datatypes.generated.Bytes32.class))), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    @Deprecated
    public static Hola_mundos load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Hola_mundos(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Hola_mundos load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Hola_mundos(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Hola_mundos load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Hola_mundos(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Hola_mundos load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Hola_mundos(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Hola_mundos> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Hola_mundos.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Hola_mundos> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Hola_mundos.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<Hola_mundos> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Hola_mundos.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Hola_mundos> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Hola_mundos.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
